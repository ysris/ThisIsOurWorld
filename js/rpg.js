window.onload = () => {
	new Game().Draw();
}

class Game {
	constructor() {
		this.layers = [
			new Layer({
				tileSetSrc: "tilesets/v1.png",
				map: [
					[2, 2, 2, 3, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 3, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 3, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 85, 86, 86, 86, 86, 86, 87, 88, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 93, 94, 94, 94, 94, 94, 95, 96, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 101, 102, 102, 102, 102, 102, 103, 104, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 129, 130, 131, 132, 133, 134, 135, 136, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 137, 138, 139, 140, 141, 142, 143, 144, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 33, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 3, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 3, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 3, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 3, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 33, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 3, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
					[2, 2, 2, 2, 2, 2, 41, 46, 47, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
				],
				tileWidth: 32
			})
		];
	}

	Draw() {
		for (let i = 0; i < this.layers.length; i++)
			this.layers[i].Draw();
	}
}

class Layer {
	constructor(obj) {
		this.setFromValues(obj);
		this.setContext();
	}

	Draw() {
		for (let y = 0; y < this.map.length; y++)
			for (let x = 0; x < this.map[y].length; x++)
				new Tile({
					context: this.context,
					src: this.tileSetSrc,
					pos: this.map[y][x],
					width: this.tileWidth,
					x: x,
					y: y,
				}).Draw();
	};

	setFromValues(obj) {
		this.tileSetSrc = obj.tileSetSrc;
		this.tileWidth = obj.tileWidth;
		this.map = obj.map;
	}

	setContext() {
		let canvas = document.getElementById('canvas');
		canvas.width = this.tileWidth * this.map[0].length;
		canvas.height = this.tileWidth * this.map.length;
		this.context = canvas.getContext('2d');
	}
}

class Tile {
	constructor(obj) {
		this.setFromValues(obj);
	}

	Draw() {
		let tile = new Image();
		tile.src = this.src;
		tile.addEventListener('load', () => {
			let tileWidth = tile.width / 32;
			let x1 = this.pos % tileWidth != 0 ? this.pos % tileWidth : tileWidth;
			let y1 = Math.ceil(this.pos / tileWidth);
			let x2 = this.x;
			let y2 = this.y;
			this.context.drawImage(
				tile,
				(x1 - 1) * this.width,
				(y1 - 1) * this.width,
				this.width,
				this.width,
				x2 * this.width,
				y2 * this.width,
				this.width,
				this.width
			);
		});
	};

	setFromValues(obj) {
		this.context = obj.context;
		this.width = obj.width;
		this.pos = obj.pos;
		this.x = obj.x;
		this.y = obj.y;
		this.src = obj.src;
	};
}